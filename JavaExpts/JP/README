<html><head><title>Java Precisely Examples</title><style type="text/css" media="screen"> body{  line-height: 1.6em;}#hor-minimalist-a{  font-family: , , Sans-Serif;  font-size: 18px;  background: #fff;  margin: 45px;  width: 1480px;  border-collapse: collapse;  text-align: left;}#hor-minimalist-a th{  font-size: 18px;  font-weight: normal;  color: black;  padding: 10px 8px;  border-bottom: 2px solid #6678b1;}#hor-minimalist-a td{  color: black;  padding: 9px 8px 0px 8px;}#hor-minimalist-a tbody tr:hover td{  color: black;}</style></head><body>
<table id = hor-minimalist-a style='table-layout:fixed' >
<tr>
<td><a href = 
"http://www.assembla.com/code/adnanpublic/subversion/nodes/JavaExpts/JP/">
1</a>:  Comments</td>
<td><a href = 
"http://www.assembla.com/code/adnanpublic/subversion/nodes/JavaExpts/JP/">
2</a>:  Program Layout Style</td>
<td><a href = 
"http://www.assembla.com/code/adnanpublic/subversion/nodes/JavaExpts/JP/">
3</a>:  Automatic Boxing Unboxing</td>
<td><a href = 
"http://www.assembla.com/code/adnanpublic/subversion/nodes/JavaExpts/JP/">
4</a>:  Primitive Type Conversion</td>
<td><a href = 
"http://www.assembla.com/code/adnanpublic/subversion/nodes/JavaExpts/JP/">
5</a>:  Signatures</td>
<td><a href = 
"http://www.assembla.com/code/adnanpublic/subversion/nodes/JavaExpts/JP/">
6</a>:  Variable Declarations</td>
<td><a href = 
"http://www.assembla.com/code/adnanpublic/subversion/nodes/JavaExpts/JP/">
7</a>:  Scope Fields Parameters Variables</td>
<td><a href = 
"http://www.assembla.com/code/adnanpublic/subversion/nodes/JavaExpts/JP/">
8</a>:  String Equality Plus</td>
</tr>
<tr>
<td><a href = 
"http://www.assembla.com/code/adnanpublic/subversion/nodes/JavaExpts/JP/">
9</a>:  Concatentaing Command Line Arguments</td>
<td><a href = 
"http://www.assembla.com/code/adnanpublic/subversion/nodes/JavaExpts/JP/">
10</a>:  Couting Chars In String</td>
<td><a href = 
"http://www.assembla.com/code/adnanpublic/subversion/nodes/JavaExpts/JP/">
11</a>:  Test String Lexicographic Order</td>
<td><a href = 
"http://www.assembla.com/code/adnanpublic/subversion/nodes/JavaExpts/JP/">
12</a>:  Using toString</td>
<td><a href = 
"http://www.assembla.com/code/adnanpublic/subversion/nodes/JavaExpts/JP/">
13</a>:  Aligning String With StringDotFormat</td>
<td><a href = 
"http://www.assembla.com/code/adnanpublic/subversion/nodes/JavaExpts/JP/">
14</a>:  Aligning Numbers In Columns With OutDotFormat</td>
<td><a href = 
"http://www.assembla.com/code/adnanpublic/subversion/nodes/JavaExpts/JP/">
15</a>:  Formatting Dates and Times As Strings</td>
<td><a href = 
"http://www.assembla.com/code/adnanpublic/subversion/nodes/JavaExpts/JP/">
16</a>:  Locale Specific Formatting Of Dates Times</td>
</tr>
<tr>
<td><a href = 
"http://www.assembla.com/code/adnanpublic/subversion/nodes/JavaExpts/JP/">
17</a>:  Local Specific Number Formatting</td>
<td><a href = 
"http://www.assembla.com/code/adnanpublic/subversion/nodes/JavaExpts/JP/">
18</a>:  Creating And Using Arrays</td>
<td><a href = 
"http://www.assembla.com/code/adnanpublic/subversion/nodes/JavaExpts/JP/">
19</a>:  Array Element Assignment Type Check At Runtime</td>
<td><a href = 
"http://www.assembla.com/code/adnanpublic/subversion/nodes/JavaExpts/JP/">
20</a>:  Using An Initialized Array</td>
<td><a href = 
"http://www.assembla.com/code/adnanpublic/subversion/nodes/JavaExpts/JP/">
21</a>:  Creating A String From A Char Array</td>
<td><a href = 
"http://www.assembla.com/code/adnanpublic/subversion/nodes/JavaExpts/JP/">
22</a>:  Creating Multidimensional Arrays</td>
<td><a href = 
"http://www.assembla.com/code/adnanpublic/subversion/nodes/JavaExpts/JP/">
23</a>:  Using Multidimensional Arrays</td>
<td><a href = 
"http://www.assembla.com/code/adnanpublic/subversion/nodes/JavaExpts/JP/">
24</a>:  Class Declaration</td>
</tr>
<tr>
<td><a href = 
"http://www.assembla.com/code/adnanpublic/subversion/nodes/JavaExpts/JP/">
25</a>:  Class With Static And Non Static Members</td>
<td><a href = 
"http://www.assembla.com/code/adnanpublic/subversion/nodes/JavaExpts/JP/">
26</a>:  Toplevel Member And Local Classes</td>
<td><a href = 
"http://www.assembla.com/code/adnanpublic/subversion/nodes/JavaExpts/JP/">
27</a>:  Abstract Classes Subclasses And Overriding</td>
<td><a href = 
"http://www.assembla.com/code/adnanpublic/subversion/nodes/JavaExpts/JP/">
28</a>:  Using The Class Hiearchy</td>
<td><a href = 
"http://www.assembla.com/code/adnanpublic/subversion/nodes/JavaExpts/JP/">
29</a>:  Field Declarations</td>
<td><a href = 
"http://www.assembla.com/code/adnanpublic/subversion/nodes/JavaExpts/JP/">
30</a>:  Several Fields With The Same Name</td>
<td><a href = 
"http://www.assembla.com/code/adnanpublic/subversion/nodes/JavaExpts/JP/">
31</a>:  Member Access Modifiers</td>
<td><a href = 
"http://www.assembla.com/code/adnanpublic/subversion/nodes/JavaExpts/JP/">
32</a>:  Private Member Accessibility</td>
</tr>
<tr>
<td><a href = 
"http://www.assembla.com/code/adnanpublic/subversion/nodes/JavaExpts/JP/">
33</a>:  Method Name Overloading And Signatures</td>
<td><a href = 
"http://www.assembla.com/code/adnanpublic/subversion/nodes/JavaExpts/JP/">
34</a>:  Method Overloading Overriding And Hiding</td>
<td><a href = 
"http://www.assembla.com/code/adnanpublic/subversion/nodes/JavaExpts/JP/">
35</a>:  Method Overloading And Parameter Array</td>
<td><a href = 
"http://www.assembla.com/code/adnanpublic/subversion/nodes/JavaExpts/JP/">
36</a>:  Constructor Overloading And Calling Another Constructor</td>
<td><a href = 
"http://www.assembla.com/code/adnanpublic/subversion/nodes/JavaExpts/JP/">
37</a>:  Calling A Superclass Constructor</td>
<td><a href = 
"http://www.assembla.com/code/adnanpublic/subversion/nodes/JavaExpts/JP/">
38</a>:  Field Intializers and Initializer Blocks</td>
<td><a href = 
"http://www.assembla.com/code/adnanpublic/subversion/nodes/JavaExpts/JP/">
39</a>:  Member Classes and Local Classes</td>
<td><a href = 
"http://www.assembla.com/code/adnanpublic/subversion/nodes/JavaExpts/JP/">
40</a>:  Iterator As Local Class</td>
</tr>
<tr>
<td><a href = 
"http://www.assembla.com/code/adnanpublic/subversion/nodes/JavaExpts/JP/">
41</a>:  Iterator As Anonymous CLass</td>
<td><a href = 
"http://www.assembla.com/code/adnanpublic/subversion/nodes/JavaExpts/JP/">
42</a>:  Objects And Classes</td>
<td><a href = 
"http://www.assembla.com/code/adnanpublic/subversion/nodes/JavaExpts/JP/">
43</a>:  Objects With Multiple Fields Of The Same Name</td>
<td><a href = 
"http://www.assembla.com/code/adnanpublic/subversion/nodes/JavaExpts/JP/">
44</a>:  Inner Objects</td>
<td><a href = 
"http://www.assembla.com/code/adnanpublic/subversion/nodes/JavaExpts/JP/">
45</a>:  Arithmetic Operators</td>
<td><a href = 
"http://www.assembla.com/code/adnanpublic/subversion/nodes/JavaExpts/JP/">
46</a>:  Logical Operators</td>
<td><a href = 
"http://www.assembla.com/code/adnanpublic/subversion/nodes/JavaExpts/JP/">
47</a>:  Bitwise Operators And Shift Operators</td>
<td><a href = 
"http://www.assembla.com/code/adnanpublic/subversion/nodes/JavaExpts/JP/">
48</a>:  Widening Narrowing And Truncation In Assignments</td>
</tr>
<tr>
<td><a href = 
"http://www.assembla.com/code/adnanpublic/subversion/nodes/JavaExpts/JP/">
49</a>:  Assignment Does Not Copy Objects</td>
<td><a href = 
"http://www.assembla.com/code/adnanpublic/subversion/nodes/JavaExpts/JP/">
50</a>:  Compound Assignments Operators</td>
<td><a href = 
"http://www.assembla.com/code/adnanpublic/subversion/nodes/JavaExpts/JP/">
51</a>:  Conditional Expressions</td>
<td><a href = 
"http://www.assembla.com/code/adnanpublic/subversion/nodes/JavaExpts/JP/">
52</a>:  Object Creation And Instance Test</td>
<td><a href = 
"http://www.assembla.com/code/adnanpublic/subversion/nodes/JavaExpts/JP/">
53</a>:  Static And Non Static Field Access</td>
<td><a href = 
"http://www.assembla.com/code/adnanpublic/subversion/nodes/JavaExpts/JP/">
54</a>:  Using This When Referring To Shadowed Fields</td>
<td><a href = 
"http://www.assembla.com/code/adnanpublic/subversion/nodes/JavaExpts/JP/">
55</a>:  Using This To Pass The Current Object To A Method</td>
<td><a href = 
"http://www.assembla.com/code/adnanpublic/subversion/nodes/JavaExpts/JP/">
56</a>:  Calling Non Overloaded Non Overridden Methods</td>
</tr>
<tr>
<td><a href = 
"http://www.assembla.com/code/adnanpublic/subversion/nodes/JavaExpts/JP/">
57</a>:  Parameter Passing Copies References Not Ojects And Arrays</td>
<td><a href = 
"http://www.assembla.com/code/adnanpublic/subversion/nodes/JavaExpts/JP/">
58</a>:  Calling Overloaded Methods</td>
<td><a href = 
"http://www.assembla.com/code/adnanpublic/subversion/nodes/JavaExpts/JP/">
59</a>:  Calling Overriden And Overloaded Methods</td>
<td><a href = 
"http://www.assembla.com/code/adnanpublic/subversion/nodes/JavaExpts/JP/">
60</a>:  Calling Overriden Methods From A Constructor</td>
<td><a href = 
"http://www.assembla.com/code/adnanpublic/subversion/nodes/JavaExpts/JP/">
61</a>:  Block Statements And Scoping</td>
<td><a href = 
"http://www.assembla.com/code/adnanpublic/subversion/nodes/JavaExpts/JP/">
62</a>:  Empty Statement And An Infinite Loop</td>
<td><a href = 
"http://www.assembla.com/code/adnanpublic/subversion/nodes/JavaExpts/JP/">
63</a>:  Single If Else Statement</td>
<td><a href = 
"http://www.assembla.com/code/adnanpublic/subversion/nodes/JavaExpts/JP/">
64</a>:  Sequence Of If Else Statements</td>
</tr>
<tr>
<td><a href = 
"http://www.assembla.com/code/adnanpublic/subversion/nodes/JavaExpts/JP/">
65</a>:  Switch Statement</td>
<td><a href = 
"http://www.assembla.com/code/adnanpublic/subversion/nodes/JavaExpts/JP/">
66</a>:  Switch On Enum Type</td>
<td><a href = 
"http://www.assembla.com/code/adnanpublic/subversion/nodes/JavaExpts/JP/">
67</a>:  Switch On Strings</td>
<td><a href = 
"http://www.assembla.com/code/adnanpublic/subversion/nodes/JavaExpts/JP/">
68</a>:  Nested For Loops</td>
<td><a href = 
"http://www.assembla.com/code/adnanpublic/subversion/nodes/JavaExpts/JP/">
69</a>:  Using Enhanced For On Arrays</td>
<td><a href = 
"http://www.assembla.com/code/adnanpublic/subversion/nodes/JavaExpts/JP/">
70</a>:  Using Enhanced For On An Iterable</td>
<td><a href = 
"http://www.assembla.com/code/adnanpublic/subversion/nodes/JavaExpts/JP/">
71</a>:  Explicitly Going Through An Iterable Using For</td>
<td><a href = 
"http://www.assembla.com/code/adnanpublic/subversion/nodes/JavaExpts/JP/">
72</a>:  Linear Array Search Using While</td>
</tr>
<tr>
<td><a href = 
"http://www.assembla.com/code/adnanpublic/subversion/nodes/JavaExpts/JP/">
73</a>:  Binary Search Of Sorted Array Using While</td>
<td><a href = 
"http://www.assembla.com/code/adnanpublic/subversion/nodes/JavaExpts/JP/">
74</a>:  Explicitly Going Through An Iterable Using While</td>
<td><a href = 
"http://www.assembla.com/code/adnanpublic/subversion/nodes/JavaExpts/JP/">
75</a>:  Using Do While</td>
<td><a href = 
"http://www.assembla.com/code/adnanpublic/subversion/nodes/JavaExpts/JP/">
76</a>:  Using Return For Early Loop Termination</td>
<td><a href = 
"http://www.assembla.com/code/adnanpublic/subversion/nodes/JavaExpts/JP/">
77</a>:  Using Break For Early Loop Termination</td>
<td><a href = 
"http://www.assembla.com/code/adnanpublic/subversion/nodes/JavaExpts/JP/">
78</a>:  Poor Practice: Using Continue To Start A New Iteration </td>
<td><a href = 
"http://www.assembla.com/code/adnanpublic/subversion/nodes/JavaExpts/JP/">
79</a>:  Poor Practice: Using Break To Exit A Labeled Statement Block</td>
<td><a href = 
"http://www.assembla.com/code/adnanpublic/subversion/nodes/JavaExpts/JP/">
80</a>:  Throwing An Exception To Indicate Failure</td>
</tr>
<tr>
<td><a href = 
"http://www.assembla.com/code/adnanpublic/subversion/nodes/JavaExpts/JP/">
81</a>:  A Try Catch Statement</td>
<td><a href = 
"http://www.assembla.com/code/adnanpublic/subversion/nodes/JavaExpts/JP/">
82</a>:  A Try Finall Statement</td>
<td><a href = 
"http://www.assembla.com/code/adnanpublic/subversion/nodes/JavaExpts/JP/">
83</a>:  Using Assert To Specify And Check The Result Of An Algorithm</td>
<td><a href = 
"http://www.assembla.com/code/adnanpublic/subversion/nodes/JavaExpts/JP/">
84</a>:  Using Assert To Specify And Check Invariants</td>
<td><a href = 
"http://www.assembla.com/code/adnanpublic/subversion/nodes/JavaExpts/JP/">
85</a>:  Three Interface Declarations</td>
<td><a href = 
"http://www.assembla.com/code/adnanpublic/subversion/nodes/JavaExpts/JP/">
86</a>:  Classes Implementing Interfaces</td>
<td><a href = 
"http://www.assembla.com/code/adnanpublic/subversion/nodes/JavaExpts/JP/">
87</a>:  Using Interfaces As Types</td>
<td><a href = 
"http://www.assembla.com/code/adnanpublic/subversion/nodes/JavaExpts/JP/">
88</a>:  Representing Weekdays And Months Using Enum Types</td>
</tr>
<tr>
<td><a href = 
"http://www.assembla.com/code/adnanpublic/subversion/nodes/JavaExpts/JP/">
89</a>:  Declaring A Checked Exception Class</td>
<td><a href = 
"http://www.assembla.com/code/adnanpublic/subversion/nodes/JavaExpts/JP/">
90</a>:  All Paths Through A Try Catch Finally Statement</td>
<td><a href = 
"http://www.assembla.com/code/adnanpublic/subversion/nodes/JavaExpts/JP/">
91</a>:  Multiple Threads</td>
<td><a href = 
"http://www.assembla.com/code/adnanpublic/subversion/nodes/JavaExpts/JP/">
92</a>:  Mutual Exclusion</td>
<td><a href = 
"http://www.assembla.com/code/adnanpublic/subversion/nodes/JavaExpts/JP/">
93</a>:  Synchronized Methods In An Object</td>
<td><a href = 
"http://www.assembla.com/code/adnanpublic/subversion/nodes/JavaExpts/JP/">
94</a>:  Producers And Consumers Communicating Via A Monitor</td>
<td><a href = 
"http://www.assembla.com/code/adnanpublic/subversion/nodes/JavaExpts/JP/">
95</a>:  Graphic Animation Using The Runnable Interface</td>
<td><a href = 
"http://www.assembla.com/code/adnanpublic/subversion/nodes/JavaExpts/JP/">
96</a>:  The Vesssel Hiearchy As A Package</td>
</tr>
<tr>
<td><a href = 
"http://www.assembla.com/code/adnanpublic/subversion/nodes/JavaExpts/JP/">
97</a>:  Floating Point Factorial</td>
<td><a href = 
"http://www.assembla.com/code/adnanpublic/subversion/nodes/JavaExpts/JP/">
98</a>:  Generating Gausssing Pseudo Random Numbers</td>
<td><a href = 
"http://www.assembla.com/code/adnanpublic/subversion/nodes/JavaExpts/JP/">
99</a>:  Mathematical Functions: Infinities</td>
<td><a href = 
"http://www.assembla.com/code/adnanpublic/subversion/nodes/JavaExpts/JP/">
100</a>:  Efficiently Concatenating All Command Line Arguments</td>
<td><a href = 
"http://www.assembla.com/code/adnanpublic/subversion/nodes/JavaExpts/JP/">
101</a>:  Replacing Occurrences Of A Character By A String</td>
<td><a href = 
"http://www.assembla.com/code/adnanpublic/subversion/nodes/JavaExpts/JP/">
102</a>:  Inefficiently Replacing Occurrences Of A Character By A String</td>
<td><a href = 
"http://www.assembla.com/code/adnanpublic/subversion/nodes/JavaExpts/JP/">
103</a>:  Padding A String To A Given Width</td>
<td><a href = 
"http://www.assembla.com/code/adnanpublic/subversion/nodes/JavaExpts/JP/">
104</a>:  Using A Non Generic ArrayList: Runtime Type Checks And Wrapping Of Values</td>
</tr>
<tr>
<td><a href = 
"http://www.assembla.com/code/adnanpublic/subversion/nodes/JavaExpts/JP/">
105</a>:  Using Generic ArrayList: Compile Time Type Checks</td>
<td><a href = 
"http://www.assembla.com/code/adnanpublic/subversion/nodes/JavaExpts/JP/">
106</a>:  Generic Class Type For Pairs</td>
<td><a href = 
"http://www.assembla.com/code/adnanpublic/subversion/nodes/JavaExpts/JP/">
107</a>:  A Generic Class For Logging</td>
<td><a href = 
"http://www.assembla.com/code/adnanpublic/subversion/nodes/JavaExpts/JP/">
108</a>:  A Generic LinkedList Class</td>
<td><a href = 
"http://www.assembla.com/code/adnanpublic/subversion/nodes/JavaExpts/JP/">
109</a>:  Type Parameter Constraints</td>
<td><a href = 
"http://www.assembla.com/code/adnanpublic/subversion/nodes/JavaExpts/JP/">
110</a>:  Constraints Involving Type Parameters</td>
<td><a href = 
"http://www.assembla.com/code/adnanpublic/subversion/nodes/JavaExpts/JP/">
111</a>:  Unchecked Cast To Type Parameter</td>
<td><a href = 
"http://www.assembla.com/code/adnanpublic/subversion/nodes/JavaExpts/JP/">
112</a>:  A Generic List Interface</td>
</tr>
<tr>
<td><a href = 
"http://www.assembla.com/code/adnanpublic/subversion/nodes/JavaExpts/JP/">
113</a>:  A Generic Interface Representing A Function</td>
<td><a href = 
"http://www.assembla.com/code/adnanpublic/subversion/nodes/JavaExpts/JP/">
114</a>:  Subtype Relations Between Generic Classes And Interfaces</td>
<td><a href = 
"http://www.assembla.com/code/adnanpublic/subversion/nodes/JavaExpts/JP/">
115</a>:  A Generic Quicksort Method Using A Comparable Object</td>
<td><a href = 
"http://www.assembla.com/code/adnanpublic/subversion/nodes/JavaExpts/JP/">
116</a>:  A Generic Quicksort Method For Comparable Values</td>
<td><a href = 
"http://www.assembla.com/code/adnanpublic/subversion/nodes/JavaExpts/JP/">
117</a>:  A Generic Methods In A Generic Class</td>
<td><a href = 
"http://www.assembla.com/code/adnanpublic/subversion/nodes/JavaExpts/JP/">
118</a>:  Wildcard Types</td>
<td><a href = 
"http://www.assembla.com/code/adnanpublic/subversion/nodes/JavaExpts/JP/">
119</a>:  Implementation By Type Erasure</td>
<td><a href = 
"http://www.assembla.com/code/adnanpublic/subversion/nodes/JavaExpts/JP/">
120</a>:  Java Generics Limiation: Cannot Create Array With Generic Element Type</td>
</tr>
<tr>
<td><a href = 
"http://www.assembla.com/code/adnanpublic/subversion/nodes/JavaExpts/JP/">
121</a>:  Using Concrete Collection And Map Classes</td>
<td><a href = 
"http://www.assembla.com/code/adnanpublic/subversion/nodes/JavaExpts/JP/">
122</a>:  Set Membership Test Using HashSet And Binary Search</td>
<td><a href = 
"http://www.assembla.com/code/adnanpublic/subversion/nodes/JavaExpts/JP/">
123</a>:  Using A LinkedHashSet To Remove Duplicates And Preserve Order</td>
<td><a href = 
"http://www.assembla.com/code/adnanpublic/subversion/nodes/JavaExpts/JP/">
124</a>:  Using TreeSet To Show A Range Of Filenames In Alphabetical Order</td>
<td><a href = 
"http://www.assembla.com/code/adnanpublic/subversion/nodes/JavaExpts/JP/">
125</a>:  Storing The Result Of A Database Query</td>
<td><a href = 
"http://www.assembla.com/code/adnanpublic/subversion/nodes/JavaExpts/JP/">
126</a>:  From Weekday Name To Weekday Number Using A HashMap</td>
<td><a href = 
"http://www.assembla.com/code/adnanpublic/subversion/nodes/JavaExpts/JP/">
127</a>:  Building A Concordance</td>
<td><a href = 
"http://www.assembla.com/code/adnanpublic/subversion/nodes/JavaExpts/JP/">
128</a>:  Obtaining A Submap</td>
</tr>
<tr>
<td><a href = 
"http://www.assembla.com/code/adnanpublic/subversion/nodes/JavaExpts/JP/">
129</a>:  Interation Over An Iterable Collection</td>
<td><a href = 
"http://www.assembla.com/code/adnanpublic/subversion/nodes/JavaExpts/JP/">
130</a>:  Printing A Concordance Using Iterables</td>
<td><a href = 
"http://www.assembla.com/code/adnanpublic/subversion/nodes/JavaExpts/JP/">
131</a>:  A Method Returning An Iterable</td>
<td><a href = 
"http://www.assembla.com/code/adnanpublic/subversion/nodes/JavaExpts/JP/">
132</a>:  A Comparator For The Integer Class</td>
<td><a href = 
"http://www.assembla.com/code/adnanpublic/subversion/nodes/JavaExpts/JP/">
133</a>:  A Time Class Implementing Comparable<Time></td>
<td><a href = 
"http://www.assembla.com/code/adnanpublic/subversion/nodes/JavaExpts/JP/">
134</a>:  A Equals Method For The Time Class</td>
<td><a href = 
"http://www.assembla.com/code/adnanpublic/subversion/nodes/JavaExpts/JP/">
135</a>:  A Comparator For The String Class</td>
<td><a href = 
"http://www.assembla.com/code/adnanpublic/subversion/nodes/JavaExpts/JP/">
136</a>:  Understanding The Type Of The Collections.binarySearch Method</td>
</tr>
<tr>
<td><a href = 
"http://www.assembla.com/code/adnanpublic/subversion/nodes/JavaExpts/JP/">
137</a>:  Understanding The Type Of The Collections.copy Method</td>
<td><a href = 
"http://www.assembla.com/code/adnanpublic/subversion/nodes/JavaExpts/JP/">
138</a>:  A Worklie Algorithm</td>
<td><a href = 
"http://www.assembla.com/code/adnanpublic/subversion/nodes/JavaExpts/JP/">
139</a>:  Using Sets As Keys In A HashMap</td>
<td><a href = 
"http://www.assembla.com/code/adnanpublic/subversion/nodes/JavaExpts/JP/">
140</a>:  A Complete Input-Output Example</td>
<td><a href = 
"http://www.assembla.com/code/adnanpublic/subversion/nodes/JavaExpts/JP/">
141</a>:  Input-Output: Twelve Examples In One</td>
<td><a href = 
"http://www.assembla.com/code/adnanpublic/subversion/nodes/JavaExpts/JP/">
142</a>:  Printing Numbers In A Text File</td>
<td><a href = 
"http://www.assembla.com/code/adnanpublic/subversion/nodes/JavaExpts/JP/">
143</a>:  Printing An HTML File</td>
<td><a href = 
"http://www.assembla.com/code/adnanpublic/subversion/nodes/JavaExpts/JP/">
144</a>:  Using The Appendable Interface</td>
</tr>
<tr>
<td><a href = 
"http://www.assembla.com/code/adnanpublic/subversion/nodes/JavaExpts/JP/">
145</a>:  Reading Numbers From A Text File</td>
<td><a href = 
"http://www.assembla.com/code/adnanpublic/subversion/nodes/JavaExpts/JP/">
146</a>:  Reading Numbers File A Text File Line By Line</td>
<td><a href = 
"http://www.assembla.com/code/adnanpublic/subversion/nodes/JavaExpts/JP/">
147</a>:  Binary Input And Output Of Primitive Data</td>
<td><a href = 
"http://www.assembla.com/code/adnanpublic/subversion/nodes/JavaExpts/JP/">
148</a>:  Serialization To The Same ObjectOutputStream Preserves Sharing</td>
<td><a href = 
"http://www.assembla.com/code/adnanpublic/subversion/nodes/JavaExpts/JP/">
149</a>:  Serialization To Distinct ObjectOutputStreams Does Not Preserve Sharing</td>
<td><a href = 
"http://www.assembla.com/code/adnanpublic/subversion/nodes/JavaExpts/JP/">
150</a>:  Output Buffering</td>
<td><a href = 
"http://www.assembla.com/code/adnanpublic/subversion/nodes/JavaExpts/JP/">
151</a>:  Specifying A Particular Output Encoding</td>
<td><a href = 
"http://www.assembla.com/code/adnanpublic/subversion/nodes/JavaExpts/JP/">
152</a>:  Organizing A String Array File For Random Access</td>
</tr>
<tr>
<td><a href = 
"http://www.assembla.com/code/adnanpublic/subversion/nodes/JavaExpts/JP/">
153</a>:  Random Access Reads From A String Array File</td>
<td><a href = 
"http://www.assembla.com/code/adnanpublic/subversion/nodes/JavaExpts/JP/">
154</a>:  Reading And Printing A Directory Hierarchy</td>
<td><a href = 
"http://www.assembla.com/code/adnanpublic/subversion/nodes/JavaExpts/JP/">
155</a>:  Internal Pipes Between Threads</td>
<td><a href = 
"http://www.assembla.com/code/adnanpublic/subversion/nodes/JavaExpts/JP/">
156</a>:  Socket Communication Between Processes</td>
<td><a href = 
"http://www.assembla.com/code/adnanpublic/subversion/nodes/JavaExpts/JP/">
157</a>:  Listing Public Methods And Declared Methods</td>
<td><a href = 
"http://www.assembla.com/code/adnanpublic/subversion/nodes/JavaExpts/JP/">
158</a>:  The Unique Class Object Of A Class And The Runtime Class Of An Object</td>
<td><a href = 
"http://www.assembla.com/code/adnanpublic/subversion/nodes/JavaExpts/JP/">
159</a>:  Reflective Object Creation Instance Tests And Casts</td>
<td><a href = 
"http://www.assembla.com/code/adnanpublic/subversion/nodes/JavaExpts/JP/">
160</a>:  Reflective Access To A Field</td>
</tr>
<tr>
<td><a href = 
"http://www.assembla.com/code/adnanpublic/subversion/nodes/JavaExpts/JP/">
161</a>:  Reflective Retrieval And Invokation Of A Method</td>
<td><a href = 
"http://www.assembla.com/code/adnanpublic/subversion/nodes/JavaExpts/JP/">
162</a>:  Retrieval Creation Of An Object</td>
<td><a href = 
"http://www.assembla.com/code/adnanpublic/subversion/nodes/JavaExpts/JP/">
163</a>:  Reflective Inspection Of Modifiers Such As Static And Private</td>
<td><a href = 
"http://www.assembla.com/code/adnanpublic/subversion/nodes/JavaExpts/JP/">
164</a>:  Declaration And Using A Custom Annotation Type</td>
<td><a href = 
"http://www.assembla.com/code/adnanpublic/subversion/nodes/JavaExpts/JP/">
165</a>:  New Frontiers In Java 5.0</td>
<td>blank</td>
<td>blank</td>
<td>blank</td>
</tr>
</table>
</body></html>
